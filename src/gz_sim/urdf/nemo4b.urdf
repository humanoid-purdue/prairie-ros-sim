<?xml version="1.0"?>
<robot name="nemo4b" xmlns:xacro="http://ros.org/wiki/xacro">

  <!--
    Top-level link: pelvis
    In MuJoCo, pelvis has a freejoint "floating_base".
    In URDF, we can model that as a floating joint with the "world" (or a fixed base if desired).
    Note: URDF requires inertia in the format:
         ixx, ixy, ixz
              iyy, iyz
                   izz
    And the "origin" for inertial is the COM offset.
  -->

  <!-- =========================
       Pelvis Link
       ========================= -->
  <link name="pelvis">
    <inertial>
      <!-- From MuJoCo: mass="5.11537484" -->
      <!-- fullinertia="0.03 0.03 0.03 0.0 0.0 0.0" means ixx=0.03, iyy=0.03, izz=0.03, cross-terms=0 -->
      <!-- pos="0.0 0.0 0.2" -->
      <origin xyz="0.0 0.0 0.2" rpy="0 0 0"/>
      <mass value="5.11537484"/>
      <inertia
         ixx="0.03"
         ixy="0.0"
         ixz="0.0"
         iyy="0.03"
         iyz="0.0"
         izz="0.03" />
    </inertial>

    <!-- Visual geometry for pelvis (mesh) -->
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <!-- Adjust the path to where your STL is actually located -->
        <mesh filename="package://nemo4b_description/meshes/pelvis.stl" scale="1 1 1"/>
      </geometry>
      <!-- Optional material -->
      <material name="metallic">
        <color rgba="0.7 0.7 0.7 1"/>
      </material>
    </visual>

    <!-- Collision geometry for pelvis.
         You may use the same mesh, or simplify the collision to boxes/spheres/etc. -->
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://nemo4b_description/meshes/pelvis.stl" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>

  <!--
      The MuJoCo file has a 'freejoint name="floating_base"' for pelvis.
      URDF has no direct "free" joint type; you can approximate it with <joint type="floating"/>.
      If you want it fixed to the world, use <joint type="fixed"/>.
  -->

  <!-- =========================
       Left Hip Pitch
       ========================= -->
  <link name="l_hip_pitch">
    <inertial>
      <!-- MuJoCo says: mass="1.8670971"
           fullinertia="0.00265583 0.00363357 0.00358009 -2e-07 -1.09e-06 -0.0"
           pos="-0.01821923 -0.0 -3.205e-05"
           Interpreted as:
             ixx=0.00265583
             iyy=0.00363357
             izz=0.00358009
             ixy=-2e-07 (very small, usually can be approximated as 0)
             ixz=-1.09e-06
             iyz=0
      -->
      <origin xyz="-0.01821923 0.0 -0.00003205" rpy="0 0 0"/>
      <mass value="1.8670971"/>
      <inertia
        ixx="0.00265583"
        ixy="-0.0000002"
        ixz="-0.00000109"
        iyy="0.00363357"
        iyz="0.0"
        izz="0.00358009" />
    </inertial>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://nemo4b_description/meshes/l_hip_pitch.stl" scale="1 1 1"/>
      </geometry>
      <material name="metallic">
        <color rgba="0.7 0.7 0.7 1"/>
      </material>
    </visual>

    <!-- For collision, you might use a simpler shape, or the same mesh. -->
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://nemo4b_description/meshes/l_hip_pitch.stl" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>

  <!-- The joint from pelvis to l_hip_pitch -->
  <joint name="joint_l_hip_pitch" type="revolute">
    <parent link="pelvis"/>
    <child link="l_hip_pitch"/>
    <!-- The MuJoCo body "l_hip_pitch" is at pos="0.0 0.0965 -0.112" relative to pelvis -->
    <origin xyz="0.0 0.0965 -0.112" rpy="0 0 0"/>
    <!-- axis="0 1 0" range="-1.3 1.3" -->
    <axis xyz="0 1 0"/>
    <limit lower="-1.3" upper="1.3" effort="47.4" velocity="X.X"/>
  </joint>


  <!-- =========================
       Left Hip Roll
       ========================= -->
  <link name="l_hip_roll">
    <inertial>
      <!-- mass="2.00459959", etc. fullinertia=... -->
      <origin xyz="-0.01740501 0.00001764 -0.05845559" rpy="0 0 0"/>
      <mass value="2.00459959"/>
      <!-- ixx=0.0064706, iyy=0.00633136, izz=0.00303949, cross terms see MuJoCo -->
      <inertia
        ixx="0.0064706"
        ixy="0.00000047"       <!-- derived from the - or + small values in the MuJoCo file -->
        ixz="-0.00070962"
        iyy="0.00633136"
        iyz="0.0000009"
        izz="0.00303949" />
    </inertial>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://nemo4b_description/meshes/l_hip_roll.stl" scale="1 1 1"/>
      </geometry>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://nemo4b_description/meshes/l_hip_roll.stl" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>

  <joint name="joint_l_hip_roll" type="revolute">
    <parent link="l_hip_pitch"/>
    <child link="l_hip_roll"/>
    <!-- from MuJoCo pos="-0.07875 0.0 0.0" -->
    <origin xyz="-0.07875 0.0 0.0" rpy="0 0 0"/>
    <axis xyz="1 0 0"/>
    <!-- range="-0.4 1.5", etc. Note the effort limit from the actuatorfrcrange. -->
    <limit lower="-0.4" upper="1.5" effort="23.7" velocity="X.X"/>
  </joint>

  <!-- Repeat for l_hip_yaw, l_knee, l_foot_pitch, l_foot_roll, etc. -->
  <!-- Each one has its own <link> block with <inertial> + <visual> + <collision>, -->
  <!-- and then a <joint> block that connects it to its parent link. -->

  <!-- =========================
       Example foot link & collision box
       ========================= -->
  <link name="l_foot_roll">
    <inertial>
      <!-- from MuJoCo: mass="1.5526793", etc. -->
      <origin xyz="0.00757956 0.00001139 -0.03942379" rpy="0 0 0"/>
      <mass value="1.5526793"/>
      <inertia
         ixx="0.00385478"
         ixy="0.00000054"
         ixz="0.0010808"
         iyy="0.0054167"
         iyz="0.0000003"
         izz="0.00391016" />
    </inertial>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://nemo4b_description/meshes/l_foot_roll.stl" scale="1 1 1"/>
      </geometry>
    </visual>

    <!-- Collision geometry as a box from the MuJoCo snippet:
         <geom class="collision" name="left_foot" pos="-0.0187 0 -0.07975" size="0.1 0.0505 0.006" type="box"/>
         That implies a box of half-extends=0.1, 0.0505, 0.006 or possibly full side length 0.2 x 0.101 x 0.012.
         In URDF, <box size="X Y Z"/> expects full side lengths, so we must double them if these are half-extents.
         MuJoCo’s “size” is usually half-extent, so the collision box is 0.1 × 0.0505 × 0.006 (full extents). 
         We also shift the box by pos="-0.0187 0 -0.07975"
    -->
    <collision>
      <origin xyz="-0.0187 0 -0.07975" rpy="0 0 0"/>
      <geometry>
        <box size="0.2 0.101 0.012"/>
      </geometry>
    </collision>
  </link>

  <joint name="joint_l_foot_roll" type="revolute">
    <parent link="l_foot_pitch"/>
    <child link="l_foot_roll"/>
    <origin xyz="0.07875 0.0 0.0" rpy="0 0 0"/>
    <axis xyz="1 0 0"/>
    <limit lower="-1.0" upper="1.0" effort="23.7" velocity="X.X"/>
  </joint>

  <!-- =========================
       Right Leg
       =========================
       The same structure as the left leg, but note that some of the meshes are scaled (1 -1 1),
       and joint limits differ slightly (like range="-1.5 0.4" for r_hip_roll).
       You’d replicate the same approach: define r_hip_pitch link/joint, r_hip_roll link/joint, etc.
  -->

  <!-- ... all other right-leg links and joints ... -->


  <!--
      If you want to specify transmissions in ROS2 for each joint, you add <transmission> blocks:
         <transmission name="l_hip_pitch_trans">
           <type>transmission_interface/SimpleTransmission</type>
           <joint name="joint_l_hip_pitch">
             <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
           </joint>
           <actuator name="motor_l_hip_pitch">
             <mechanicalReduction>1</mechanicalReduction>
           </actuator>
         </transmission>
      etc.
      You’d do that for each joint that is actuated.
  -->

</robot>